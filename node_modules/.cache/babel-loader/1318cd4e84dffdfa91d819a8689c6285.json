{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mykola\\\\GitHub\\\\articles-application\\\\src\\\\App.jsx\";\nimport { Component } from \"react\";\nimport { Container } from \"components/Container/ArticlesBoard\";\nimport { Searchbar } from \"components/Searchbar/Searchbar\";\nimport { CountResults } from \"components/CountResults/CountResults\";\nimport { ArticleList } from \"components/ArticleList/ArticleList\";\nimport api from './service/articles-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      currentPage: 1,\n      searchQuery: ''\n    };\n\n    this.onChangeQuery = query => {\n      this.setState({\n        searchQuery: query,\n        articles: [],\n        currentPage: 1,\n        error: null\n      });\n    };\n\n    this.fetchArticles = () => {\n      const {\n        currentPage,\n        searchQuery\n      } = this.state;\n      const options = {\n        currentPage,\n        searchQuery\n      };\n      this.setState({\n        isLoading: true\n      });\n      api.fetchArticles(options).then(articles => {\n        this.setState(prevState => ({\n          articles: [...prevState.articles, ...articles],\n          currentPage: prevState.currentPage + 1\n        }));\n      }).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        isLoading: false\n      }));\n    };\n\n    this.toggleModal = () => {\n      this.setState(({\n        showModal\n      }) => ({\n        showModal: !showModal\n      }));\n    };\n\n    this.showSelectedArticle = (url, alt) => {\n      this.setState({\n        largeImageUrl: url,\n        description: alt\n      });\n      this.toggleModal();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n\n    this.scrollToBottom();\n  }\n\n  render() {\n    const {\n      articles\n    } = this.state; // const renderButton = articles.length > 0 && !isLoading;\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.onChangeQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountResults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArticleList, {\n        articles: articles,\n        onArticleClick: this.showSelectedArticle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Mykola/GitHub/articles-application/src/App.jsx"],"names":["Component","Container","Searchbar","CountResults","ArticleList","api","App","state","articles","currentPage","searchQuery","onChangeQuery","query","setState","error","fetchArticles","options","isLoading","then","prevState","catch","finally","toggleModal","showModal","showSelectedArticle","url","alt","largeImageUrl","description","componentDidUpdate","prevProps","fetchImages","scrollToBottom","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,WAAT,QAA4B,oCAA5B;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;;AAEA,OAAO,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEjCO,KAFiC,GAEzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,CAFP;AAGNC,MAAAA,WAAW,EAAE;AAHP,KAFyB;;AAAA,SAgBjCC,aAhBiC,GAgBjBC,KAAK,IAAI;AACvB,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEE,KADD;AAEZJ,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,WAAW,EAAE,CAHD;AAIZK,QAAAA,KAAK,EAAE;AAJK,OAAd;AAMD,KAvBgC;;AAAA,SAyBjCC,aAzBiC,GAyBjB,MAAM;AACpB,YAAM;AAAEN,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAA+B,KAAKH,KAA1C;AACA,YAAMS,OAAO,GAAG;AAAEP,QAAAA,WAAF;AAAeC,QAAAA;AAAf,OAAhB;AAEA,WAAKG,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAd;AAEAZ,MAAAA,GAAG,CACAU,aADH,CACiBC,OADjB,EAEGE,IAFH,CAEQV,QAAQ,IAAI;AAChB,aAAKK,QAAL,CAAcM,SAAS,KAAK;AAC1BX,UAAAA,QAAQ,EAAE,CAAC,GAAGW,SAAS,CAACX,QAAd,EAAwB,GAAGA,QAA3B,CADgB;AAE1BC,UAAAA,WAAW,EAAEU,SAAS,CAACV,WAAV,GAAwB;AAFX,SAAL,CAAvB;AAID,OAPH,EAQGW,KARH,CAQSN,KAAK,IAAI,KAAKD,QAAL,CAAc;AAAEC,QAAAA;AAAF,OAAd,CARlB,EASGO,OATH,CASW,MAAM,KAAKR,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAd,CATjB;AAUD,KAzCgC;;AAAA,SA2CjCK,WA3CiC,GA2CnB,MAAM;AAClB,WAAKT,QAAL,CAAc,CAAC;AAAEU,QAAAA;AAAF,OAAD,MAAoB;AAChCA,QAAAA,SAAS,EAAE,CAACA;AADoB,OAApB,CAAd;AAGD,KA/CgC;;AAAA,SAiDjCC,mBAjDiC,GAiDX,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC,WAAKb,QAAL,CAAc;AACZc,QAAAA,aAAa,EAAEF,GADH;AAEZG,QAAAA,WAAW,EAAEF;AAFD,OAAd;AAKA,WAAKJ,WAAL;AACD,KAxDgC;AAAA;;AAQjCO,EAAAA,kBAAkB,CAACC,SAAD,EAAYX,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACT,WAAV,KAA0B,KAAKH,KAAL,CAAWG,WAAzC,EAAsD;AACpD,WAAKqB,WAAL;AACD;;AAED,SAAKC,cAAL;AACD;;AA4CDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA;AAAF,QACJ,KAAKD,KADP,CADO,CAIP;;AAGA,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKI;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEH,QAAvB;AAAiC,QAAA,cAAc,EAAE,KAAKgB;AAAtD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAjFgC;AAkFlC","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport { Container } from \"components/Container/ArticlesBoard\";\r\nimport { Searchbar } from \"components/Searchbar/Searchbar\";\r\nimport { CountResults } from \"components/CountResults/CountResults\";\r\nimport { ArticleList } from \"components/ArticleList/ArticleList\";\r\n\r\nimport api from './service/articles-api';\r\n\r\nexport class App extends Component {\r\n\r\n  state = {\r\n    articles: [],\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n\r\n    this.scrollToBottom();\r\n  };\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      articles: [],\r\n      currentPage: 1,\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchArticles = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    const options = { currentPage, searchQuery };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    api\r\n      .fetchArticles(options)\r\n      .then(articles => {\r\n        this.setState(prevState => ({\r\n          articles: [...prevState.articles, ...articles],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  showSelectedArticle = (url, alt) => {\r\n    this.setState({\r\n      largeImageUrl: url,\r\n      description: alt,\r\n    });\r\n\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { articles } =\r\n      this.state;\r\n\r\n    // const renderButton = articles.length > 0 && !isLoading;\r\n\r\n\r\n    return (\r\n      <Container>\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        <CountResults />\r\n        <ArticleList articles={articles} onArticleClick={this.showSelectedArticle} />\r\n        {/* {isLoading && <Loader />} */}\r\n        {/* {renderButton && <Button onClick={this.fetchArticles} />} */}\r\n        {/* {showModal && (\r\n          <Modal\r\n            url={largeImageUrl}\r\n            alt={description}\r\n            onClose={this.toggleModal}\r\n          />\r\n        )} */}\r\n      </Container>\r\n    );\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}